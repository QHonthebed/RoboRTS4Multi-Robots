<launch>
    <arg name="map" value="icra2019"/>
    <master auto="start"/>

    <param name="/use_sim_time" value="true"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- launch the ICRA gazebo world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find roborts_gazebo)/worlds/ICRA2019_3D_MAP.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts)/tools/maps/$(arg map).yaml" respawn="false" />

    <!-- Run the Gazebo Simulator -->
    <node name="uwb_tf_static_publisher" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 map uwb 100" />

    <!-- Run the rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find roborts)/tools/rviz/rm_mulit.rviz" />

    <!-- Run the SelfCheck Node -->
    <!-- node pkg="roborts" type="self_check_node" name="self_check_node" respawn="false" / -->
    <group ns="robot_0">
        <param name="tf_prefix" value="robot_0" />
        <include file="$(find roborts_gazebo)/launch/spawn_robot.launch">
            <arg name="robot_model" value="$(find roborts_gazebo)/robots/infantry_red.xacro" />
            <arg name="pos_x" value="0.8"/>
            <arg name="pos_y" value="0.8"/>
            <arg name="pos_z" value="0.08"/>
            <arg name="pos_R" value="0"/>
            <arg name="name" value="robot_0"/>
        </include>

        <!-- Run the Localization Node -->
        <node pkg="roborts" type="localization_node" name="localization_node" respawn="false">
            <param name="initial_pose_x" type="double" value="1.0" />
            <param name="initial_pose_y" type="double" value="1.0" />
        </node>

        <!-- Run the Global Planner Node -->
        <node pkg="roborts" type="global_planner_node" name="global_planner_node" respawn="false" />

        <!-- Run the Local Planner Node -->
        <node pkg="roborts" type="local_planner_node" name="local_planner_node" respawn="false"/>

        <!-- Run the Decision Node -->
        <!-- <node pkg="roborts" type="test_decision_node" name="test_decision_node" respawn="false" /> -->
        <node pkg="roborts" type="sim_decision_node" name="sim_decision_node" respawn="false" />
    </group>

    <group ns="robot_1">
        <param name="tf_prefix" value="robot_1" />
        <include file="$(find roborts_gazebo)/launch/spawn_robot.launch">
            <arg name="robot_model" value="$(find roborts_gazebo)/robots/infantry_red.xacro" />
            <arg name="pos_x" value="7.2"/>
            <arg name="pos_y" value="0.8"/>
            <arg name="pos_z" value="0.08"/>
            <arg name="pos_R" value="0"/>
            <arg name="name" value="robot_1"/>
        </include>

        <!-- Run the Localization Node -->
        <node pkg="roborts" type="localization_node" name="localization_node" respawn="false">
            <param name="initial_pose_x" type="double" value="7.0" />
            <param name="initial_pose_y" type="double" value="1.0" />
        </node>
        <!-- Run the Global Planner Node -->
        <node pkg="roborts" type="global_planner_node" name="global_planner_node" respawn="false" />

        <!-- Run the Local Planner Node -->
        <node pkg="roborts" type="local_planner_node" name="local_planner_node" respawn="false"/>

        <!-- Run the Decision Node -->
        <!-- <node pkg="roborts" type="test_decision_node" name="test_decision_node" respawn="false" /> -->
        <node pkg="roborts" type="sim_decision_node" name="sim_decision_node" respawn="false" />
    </group>

    <group ns="blue1">

        <!-- <include file="$(find roborts_gazebo)/launch/spawn_robot.launch">
        <arg name="robot_model" value="$(find roborts_gazebo)/robots/infantry_blue.xacro" />
        <arg name="pos_x" value="1"/>
        <arg name="pos_y" value="4"/>
        <arg name="pos_z" value="0.08"/>
        <arg name="pos_R" value="0"/>
        <arg name="name" value="infantry_blue1"/>
    </include> -->

        <!-- Run the Localization Node -->
        <!-- <node pkg="roborts" type="localization_node" name="localization_node" respawn="false" /> -->

        <!-- Run the Global Planner Node -->
        <!-- <node pkg="roborts" type="global_planner_node" name="global_planner_node" respawn="false" /> -->

        <!-- Run the Local Planner Node -->
        <!-- <node pkg="roborts" type="local_planner_node" name="local_planner_node" respawn="false" /> -->

        <!-- Run the Decision Node -->
        <!-- <node pkg="roborts" type="test_decision_node" name="test_decision_node" respawn="false" /> -->
        <!-- <node pkg="roborts" type="sim_decision_node" name="sim_decision_node" respawn="false" /> -->
    </group>

    <group ns="blue2">

        <!-- <include file="$(find roborts_gazebo)/launch/spawn_robot.launch">
        <arg name="robot_model" value="$(find roborts_gazebo)/robots/infantry_blue.xacro" />
        <arg name="pos_x" value="7"/>
        <arg name="pos_y" value="4"/>
        <arg name="pos_z" value="0.08"/>
        <arg name="pos_R" value="0"/>
        <arg name="name" value="infantry_blue2"/>
    </include> -->

        <!-- Run the Localization Node -->
        <!-- <node pkg="roborts" type="localization_node" name="localization_node" respawn="false" /> -->

        <!-- Run the Global Planner Node -->
        <!-- <node pkg="roborts" type="global_planner_node" name="global_planner_node" respawn="false" /> -->

        <!-- Run the Local Planner Node -->
        <!-- <node pkg="roborts" type="local_planner_node" name="local_planner_node" respawn="false" /> -->

        <!-- Run the Decision Node -->
        <!-- <node pkg="roborts" type="test_decision_node" name="test_decision_node" respawn="false" /> -->

        <!-- <node pkg="roborts" type="sim_decision_node" name="sim_decision_node" respawn="false" /> -->
    </group>

</launch>
